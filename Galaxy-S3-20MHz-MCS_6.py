# TODO add image and put this code into an appendix at the bottom
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import pyplot as plt
import pylab
import statsmodels.api as sm
import numpy as np
# import airtime

#MCS6
P = [969.66, 975.39, 979.45, 984.37, 988.74, 989.71, 990.64, 991.56, 982.56, 984.5, 985.16, 988.17, 985.7, 986.74, 987.46, 989.37, 1007.68, 1016.4, 1015.24, 1017.74, 1021.2, 1022.31, 1020.59, 1023.87, 1031.52, 1037.64, 1042.63, 1043.06, 1045.53, 1044.37, 1047.22, 1048.66, 1032.39, 1046.41, 1049.65, 1051.35, 1053.67, 1064.49, 1068.66, 1070.47, 1052.39, 1063.84, 1075.23, 1077.54, 1085.9, 1079.11, 1088.88, 1096.43, 1080.93, 1088.47, 1085.34, 1093.73, 1095.8, 1096.21, 1100.35, 1108.43, 1088.92, 1090.21, 1098.45, 1102.35, 1104.8, 1106.86, 1108.46, 1106.54, 1102.43, 1103.46, 1106.41, 1112.36, 1116.46, 1118.21, 1119.93, 1118.46, 1103.21, 1108.46, 1113.09, 1109.65, 1111.94, 1116.74, 1119.56, 1121.64, 1115.61, 1120.9, 1124.32, 1126.1, 1131.6, 1126.87, 1114.32, 1116.07, 1129.56, 1131.56, 1137.93, 1133.72, 1129.68, 1132.41, 1123.66, 1124.69, 1146.89, 1147.73, 1150.73, 1143.66, 1145.23, 1146.88, 1148.65, 1130.41, 1165.04, 1165.23, 1167.07, 1152.21, 1151.4, 1144.17, 1148.23, 1146.23] # Total power
lambda_r = [100, 100, 100, 100, 100, 100, 100, 100, 200, 200, 200, 200, 200, 200, 200, 200, 400, 400, 400, 400, 400, 400, 400, 400, 800, 800, 800, 800, 800, 800, 800, 800, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2400, 2400, 2400, 2400, 2400, 2400, 2400, 2400, 2800, 2800, 2800, 2800, 2800, 2800, 2800, 2800, 3200, 3200, 3200, 3200, 3200, 3200, 3200, 3200, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400]           # thruput [x_2]
tau_rx = [0.001367521, 0.002735043, 0.004102564, 0.006837607, 0.010940171, 0.013675214, 0.016410256, 0.020102564, 0.002735043, 0.005470085, 0.008205128, 0.013675214, 0.021880342, 0.027350427, 0.032820513, 0.040205128, 0.005470085, 0.010940171, 0.016410256, 0.027350427, 0.043760684, 0.054700855, 0.065641026, 0.080410256, 0.010940171, 0.021880342, 0.032820513, 0.054700855, 0.087521368, 0.109401709, 0.131282051, 0.160820513, 0.016410256, 0.032820513, 0.049230769, 0.082051282, 0.131282051, 0.164102564, 0.196923077, 0.241230769, 0.020512821, 0.041025641, 0.061538462, 0.102564103, 0.164102564, 0.205128205, 0.246153846, 0.301538462, 0.024615385, 0.049230769, 0.073846154, 0.123076923, 0.196923077, 0.246153846, 0.295384615, 0.361846154, 0.027350427, 0.054700855, 0.082051282, 0.136752137, 0.218803419, 0.273504274, 0.328205128, 0.402051282, 0.032820513, 0.065641026, 0.098461538, 0.164102564, 0.262564103, 0.328205128, 0.393846154, 0.482461538, 0.038290598, 0.076581197, 0.114871795, 0.191452991, 0.306324786, 0.382905983, 0.459487179, 0.562871795, 0.043760684, 0.087521368, 0.131282051, 0.218803419, 0.35008547, 0.437606838, 0.525128205, 0.643282051, 0.049230769, 0.098461538, 0.147692308, 0.246153846, 0.393846154, 0.492307692, 0.590769231, 0.723692308, 0.054700855, 0.109401709, 0.164102564, 0.273504274, 0.437606838, 0.547008547, 0.656410256, 0.765811966, 0.06017094, 0.12034188, 0.180512821, 0.240683761, 0.300854701, 0.481367521, 0.601709402, 0.79425641]         # [x_1]print len(Total_Power), len(Throughput)

X = []
for index in range(0,len(P)):
	x = []
	x.append(tau_rx[index])
	x.append(lambda_r[index])
	X.append(x)

y = P

## fit a OLS model with intercept on TV and Radio
X = sm.add_constant(X)
est = sm.OLS(y, X).fit()
print est.summary()

## Create the 3d plot -- skip reading this
# TV/Radio grid for 3d plot
xx1, xx2 = np.meshgrid(np.linspace(min(tau_rx), max(tau_rx), 100), 
                       np.linspace(min(lambda_r), max(lambda_r), 100))
# plot the hyperplane by evaluating the parameters on the grid
Z = est.params[0] + est.params[1] * xx1 + est.params[2] * xx2

# create matplotlib 3d axes
fig = plt.figure(figsize=(12, 8))
ax = Axes3D(fig, azim=-115, elev=15)

# plot hyperplane
surf = ax.plot_surface(xx1, xx2, Z, cmap=plt.cm.RdBu_r, alpha=0.6, linewidth=0)

# plot data points - points over the HP are white, points below are black
"""
resid = y - est.predict(X)
ax.scatter(X[resid >= 0].TV, X[resid >= 0].Radio, y[resid >= 0], color='black', alpha=1.0, facecolor='white')
ax.scatter(X[resid < 0].TV, X[resid < 0].Radio, y[resid < 0], color='black', alpha=1.0)
"""
ax.plot(tau_rx, lambda_r, y, c='k', marker='^')

# set axis labels
ax.set_xlabel('tau_rx')
ax.set_ylabel('lambda_r')
ax.set_zlabel('Total Power')

plt.show()
