# TODO add image and put this code into an appendix at the bottom
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import pyplot as plt
import pylab
import statsmodels.api as sm
import numpy as np
# import airtime

#MCS4
P = [983.68, 965, 987.34, 990.1, 991.2, 987.6, 994.1, 1000.26, 997.51, 997.63, 998.13, 996.35, 1000.16, 998.24, 999.79, 1002.39, 1014.87, 1016.58, 1021.73, 1025.97, 1030.83, 1029.34, 1033.7, 1035.39, 1052.68, 1046.32, 1066.96, 1071.61, 1073.94, 1072.22, 1074.56, 1072.64, 1071.32, 1069.34, 1079.18, 1072.9, 1073.4, 1078.63, 1076.69, 1093.65, 1071.74, 1081.72, 1078.86, 1091.23, 1098.8, 1091.77, 1092.18, 1092.01, 1084.88, 1090.33, 1096.41, 1092.61, 1090.61, 1096.66, 1097.56, 1106.68, 1090.53, 1090.14, 1096.53, 1101.58, 1109.53, 1112.5, 1110.34, 1108.64, 1091.32, 1096.65, 1099.67, 1105.93, 1108.69, 1106.45, 1116.58, 1112.2, 1102.93, 1104.3, 1107.5, 1109.65, 1116.5, 1113.89, 1107.9, 1101.99, 1105.56, 1110.72, 1117.96, 1120.33, 1123.03, 1118.48, 1123.29, 1118.19, 1110.02, 1118.32, 1116.45, 1117.77, 1119.6, 1123.5, 1122.46, 1127.83, 1115.5, 1121.15, 1123.47, 1132.36, 1134.42, 1130.74, 1132.8, 1130.41, 1120.74, 1127.66, 1134.27, 1129.53, 1138.6, 1133.2, 1129.2, 1136.4] # Total power
lambda_r = [100, 100, 100, 100, 100, 100, 100, 100, 200, 200, 200, 200, 200, 200, 200, 200, 400, 400, 400, 400, 400, 400, 400, 400, 800, 800, 800, 800, 800, 800, 800, 800, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2400, 2400, 2400, 2400, 2400, 2400, 2400, 2400, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2800, 2800, 2800, 2800, 2800, 2800, 2800, 2800, 3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000, 3200, 3200, 3200, 3200, 3200, 3200, 3200, 3200]           # thruput [x_2]
tau_rx = [0.002051282, 0.004102564, 0.006153846, 0.01025641, 0.016410256, 0.020512821, 0.024615385, 0.030153846, 0.004102564, 0.008205128, 0.012307692, 0.020512821, 0.032820513, 0.041025641, 0.049230769, 0.060307692, 0.008205128, 0.016410256, 0.024615385, 0.041025641, 0.065641026, 0.082051282, 0.098461538, 0.120615385, 0.016410256, 0.032820513, 0.049230769, 0.082051282, 0.131282051, 0.164102564, 0.196923077, 0.241230769, 0.024615385, 0.049230769, 0.073846154, 0.123076923, 0.196923077, 0.246153846, 0.295384615, 0.361846154, 0.030769231, 0.061538462, 0.092307692, 0.153846154, 0.246153846, 0.307692308, 0.369230769, 0.452307692, 0.036923077, 0.073846154, 0.110769231, 0.184615385, 0.295384615, 0.369230769, 0.443076923, 0.542769231, 0.041025641, 0.082051282, 0.123076923, 0.205128205, 0.328205128, 0.41025641, 0.492307692, 0.603076923, 0.045128205, 0.09025641, 0.135384615, 0.225641026, 0.361025641, 0.451282051, 0.541538462, 0.663384615, 0.049230769, 0.098461538, 0.147692308, 0.246153846, 0.393846154, 0.492307692, 0.590769231, 0.723692308, 0.053333333, 0.106666667, 0.16, 0.266666667, 0.426666667, 0.533333333, 0.64, 0.784, 0.057435897, 0.114871795, 0.172307692, 0.287179487, 0.459487179, 0.574358974, 0.689230769, 0.844307692, 0.061538462, 0.123076923, 0.184615385, 0.246153846, 0.307692308, 0.492307692, 0.615384615, 0.738461538, 0.065641026, 0.131282051, 0.196923077, 0.262564103, 0.328205128, 0.525128205, 0.656410256, 0.787692308]         # [x_1]print len(Total_Power), len(Throughput)

X = []
for index in range(0,len(P)):
	x = []
	x.append(tau_rx[index])
	x.append(lambda_r[index])
	X.append(x)

y = P

## fit a OLS model with intercept on TV and Radio
X = sm.add_constant(X)
est = sm.OLS(y, X).fit()
print est.summary()

## Create the 3d plot -- skip reading this
# TV/Radio grid for 3d plot
xx1, xx2 = np.meshgrid(np.linspace(min(tau_rx), max(tau_rx), 100), 
                       np.linspace(min(lambda_r), max(lambda_r), 100))
# plot the hyperplane by evaluating the parameters on the grid
Z = est.params[0] + est.params[1] * xx1 + est.params[2] * xx2

# create matplotlib 3d axes
fig = plt.figure(figsize=(12, 8))
ax = Axes3D(fig, azim=-115, elev=15)

# plot hyperplane
surf = ax.plot_surface(xx1, xx2, Z, cmap=plt.cm.RdBu_r, alpha=0.6, linewidth=0)

# plot data points - points over the HP are white, points below are black

ax.plot(tau_rx, lambda_r, y, c='k', marker='^')

# set axis labels
ax.set_xlabel('tau_rx')
ax.set_ylabel('lambda_r')
ax.set_zlabel('Total Power')

plt.show()
